<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.faceRecog.manage.mapper.PeriodMapper">
    <resultMap id="BaseResultMap" type="com.faceRecog.manage.model.Period">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="period_name" property="periodName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="day_num" property="dayNum" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, period_name, create_time, update_time, create_user_id, status, type, day_num
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from fr_period
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from fr_period
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.faceRecog.manage.model.Period">
    insert into fr_period (id, period_name, create_time, 
      update_time, create_user_id, status, 
      type, day_num)
    values (#{id,jdbcType=VARCHAR}, #{periodName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{dayNum,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.faceRecog.manage.model.Period">
        insert into fr_period
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="periodName != null">
                period_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="dayNum != null">
                day_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="periodName != null">
                #{periodName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="dayNum != null">
                #{dayNum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.faceRecog.manage.model.Period">
        update fr_period
        <set>
            <if test="periodName != null">
                period_name = #{periodName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="dayNum != null">
                day_num = #{dayNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.faceRecog.manage.model.Period">
    update fr_period
    set period_name = #{periodName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      day_num = #{dayNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>


    <!--自定义 sql  -->
    <!--查询所有周期-->
    <select id="selectPeriod" resultType="map">
        <!--SELECT pa.id as id ,p.id as periodId,p.period_name as periodName,COUNT(pa.id)  as dayNum
        FROM fr_period p
        LEFT JOIN fr_period_attend pa ON p.id = pa.period_id
        LEFT JOIN fr_attendance a ON pa.attend_id = a.id
        where p.type=2 GROUP BY period_id-->
        SELECT p.id as periodId ,period_name as periodName,day_num as dayNum
        FROM fr_period p
        where p.type=2 order by create_time asc
    </select>

    <!--批量删除周期班次-->
    <delete id="deletePeriod" parameterType="list">
        delete from fr_period
        <where>
            id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>

    <!--根据考勤组id查询考勤组周期排班信息  -->
    <select id="selectPeriodInfoByAgId" parameterType="string" resultMap="BaseResultMap">
  select  pr.id, pr.period_name
  from fr_period pr
  left join fr_attend_group_period agp on agp.pr_id=pr.id
  where agp.ag_id = #{agId,jdbcType=VARCHAR}
  </select>

    <select id="selectPeriodByAgId" parameterType="string" resultMap="BaseResultMap">
 select  pr.id, pr.period_name
  from fr_period pr
  left join fr_attend_group_period agp on agp.pr_id=pr.id
  where agp.ag_id = #{agId,jdbcType=VARCHAR}
 </select>

    <!--查询当前周期的天数-->
    <select id="selectDayNumByPeriodId" parameterType="string" resultType="int">
    select day_num as dayNum
    from fr_period
    where id = #{periodId,jdbcType=VARCHAR}
  </select>

    <!--修改当前周期的天数-->
    <update id="updateByDayNum" parameterType="map">
    update fr_period
    set day_num = #{newDayNum,jdbcType=INTEGER}
    where id = #{periodId,jdbcType=VARCHAR}
  </update>

    <!--判断周期名称是否重复-->
    <select id="selectCountByPeriodName" parameterType="string" resultType="int">
        SELECT COUNT(period_name)
        FROM fr_period
        WHERE period_name = #{periodName,jdbcType=VARCHAR}
    </select>

    <!--判断周期名称是否重复 除去自己-->
    <select id="selectCountByPeriodNameExceptOwn" parameterType="string" resultType="int">
        SELECT COUNT(period_name)
        FROM fr_period
        WHERE period_name = #{periodName,jdbcType=VARCHAR}
        AND id != #{id,jdbcType=VARCHAR}
    </select>

</mapper>